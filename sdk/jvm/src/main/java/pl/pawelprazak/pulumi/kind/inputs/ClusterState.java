// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pl.pawelprazak.pulumi.kind.inputs;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import pl.pawelprazak.pulumi.kind.Utilities;


public final class ClusterState extends io.pulumi.resources.ResourceArgs {

    public static final ClusterState Empty = ClusterState.builder().build();

    @InputImport(name="clientCertificate")
    private final @Nullable Input<String> clientCertificate;

    public Input<String> getClientCertificate() {
        return Input.ofNullable(this.clientCertificate);
    }

    @InputImport(name="clientKey")
    private final @Nullable Input<String> clientKey;

    public Input<String> getClientKey() {
        return Input.ofNullable(this.clientKey);
    }

    @InputImport(name="clusterCaCertificate")
    private final @Nullable Input<String> clusterCaCertificate;

    public Input<String> getClusterCaCertificate() {
        return Input.ofNullable(this.clusterCaCertificate);
    }

    @InputImport(name="endpoint")
    private final @Nullable Input<String> endpoint;

    public Input<String> getEndpoint() {
        return Input.ofNullable(this.endpoint);
    }

    @InputImport(name="kindConfig")
    private final @Nullable Input<pl.pawelprazak.pulumi.kind.inputs.ClusterKindConfigGetArgs> kindConfig;

    public Input<pl.pawelprazak.pulumi.kind.inputs.ClusterKindConfigGetArgs> getKindConfig() {
        return Input.ofNullable(this.kindConfig);
    }

    @InputImport(name="kubeconfig")
    private final @Nullable Input<String> kubeconfig;

    public Input<String> getKubeconfig() {
        return Input.ofNullable(this.kubeconfig);
    }

    @InputImport(name="kubeconfigPath")
    private final @Nullable Input<String> kubeconfigPath;

    public Input<String> getKubeconfigPath() {
        return Input.ofNullable(this.kubeconfigPath);
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return Input.ofNullable(this.name);
    }

    @InputImport(name="nodeImage")
    private final @Nullable Input<String> nodeImage;

    public Input<String> getNodeImage() {
        return Input.ofNullable(this.nodeImage);
    }

    @InputImport(name="waitForReady")
    private final @Nullable Input<Boolean> waitForReady;

    public Input<Boolean> getWaitForReady() {
        return Input.ofNullable(this.waitForReady);
    }

    public ClusterState(
        @Nullable Input<String> clientCertificate,
        @Nullable Input<String> clientKey,
        @Nullable Input<String> clusterCaCertificate,
        @Nullable Input<String> endpoint,
        @Nullable Input<pl.pawelprazak.pulumi.kind.inputs.ClusterKindConfigGetArgs> kindConfig,
        @Nullable Input<String> kubeconfig,
        @Nullable Input<String> kubeconfigPath,
        @Nullable Input<String> name,
        @Nullable Input<String> nodeImage,
        @Nullable Input<Boolean> waitForReady) {
        this.clientCertificate = clientCertificate;
        this.clientKey = clientKey;
        this.clusterCaCertificate = clusterCaCertificate;
        this.endpoint = endpoint;
        this.kindConfig = kindConfig;
        this.kubeconfig = kubeconfig;
        this.kubeconfigPath = kubeconfigPath;
        this.name = name;
        this.nodeImage = nodeImage;
        this.waitForReady = waitForReady;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> clientCertificate;
        private @Nullable Input<String> clientKey;
        private @Nullable Input<String> clusterCaCertificate;
        private @Nullable Input<String> endpoint;
        private @Nullable Input<pl.pawelprazak.pulumi.kind.inputs.ClusterKindConfigGetArgs> kindConfig;
        private @Nullable Input<String> kubeconfig;
        private @Nullable Input<String> kubeconfigPath;
        private @Nullable Input<String> name;
        private @Nullable Input<String> nodeImage;
        private @Nullable Input<Boolean> waitForReady;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientCertificate = defaults.clientCertificate;
    	      this.clientKey = defaults.clientKey;
    	      this.clusterCaCertificate = defaults.clusterCaCertificate;
    	      this.endpoint = defaults.endpoint;
    	      this.kindConfig = defaults.kindConfig;
    	      this.kubeconfig = defaults.kubeconfig;
    	      this.kubeconfigPath = defaults.kubeconfigPath;
    	      this.name = defaults.name;
    	      this.nodeImage = defaults.nodeImage;
    	      this.waitForReady = defaults.waitForReady;
        }

        public Builder setClientCertificate(@Nullable Input<String> clientCertificate) {
            this.clientCertificate = clientCertificate;
            return this;
        }

        public Builder setClientCertificate(@Nullable String clientCertificate) {
            this.clientCertificate = Input.ofNullable(clientCertificate);
            return this;
        }

        public Builder setClientKey(@Nullable Input<String> clientKey) {
            this.clientKey = clientKey;
            return this;
        }

        public Builder setClientKey(@Nullable String clientKey) {
            this.clientKey = Input.ofNullable(clientKey);
            return this;
        }

        public Builder setClusterCaCertificate(@Nullable Input<String> clusterCaCertificate) {
            this.clusterCaCertificate = clusterCaCertificate;
            return this;
        }

        public Builder setClusterCaCertificate(@Nullable String clusterCaCertificate) {
            this.clusterCaCertificate = Input.ofNullable(clusterCaCertificate);
            return this;
        }

        public Builder setEndpoint(@Nullable Input<String> endpoint) {
            this.endpoint = endpoint;
            return this;
        }

        public Builder setEndpoint(@Nullable String endpoint) {
            this.endpoint = Input.ofNullable(endpoint);
            return this;
        }

        public Builder setKindConfig(@Nullable Input<pl.pawelprazak.pulumi.kind.inputs.ClusterKindConfigGetArgs> kindConfig) {
            this.kindConfig = kindConfig;
            return this;
        }

        public Builder setKindConfig(@Nullable pl.pawelprazak.pulumi.kind.inputs.ClusterKindConfigGetArgs kindConfig) {
            this.kindConfig = Input.ofNullable(kindConfig);
            return this;
        }

        public Builder setKubeconfig(@Nullable Input<String> kubeconfig) {
            this.kubeconfig = kubeconfig;
            return this;
        }

        public Builder setKubeconfig(@Nullable String kubeconfig) {
            this.kubeconfig = Input.ofNullable(kubeconfig);
            return this;
        }

        public Builder setKubeconfigPath(@Nullable Input<String> kubeconfigPath) {
            this.kubeconfigPath = kubeconfigPath;
            return this;
        }

        public Builder setKubeconfigPath(@Nullable String kubeconfigPath) {
            this.kubeconfigPath = Input.ofNullable(kubeconfigPath);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setNodeImage(@Nullable Input<String> nodeImage) {
            this.nodeImage = nodeImage;
            return this;
        }

        public Builder setNodeImage(@Nullable String nodeImage) {
            this.nodeImage = Input.ofNullable(nodeImage);
            return this;
        }

        public Builder setWaitForReady(@Nullable Input<Boolean> waitForReady) {
            this.waitForReady = waitForReady;
            return this;
        }

        public Builder setWaitForReady(@Nullable Boolean waitForReady) {
            this.waitForReady = Input.ofNullable(waitForReady);
            return this;
        }

        public ClusterState build() {
            return new ClusterState(clientCertificate, clientKey, clusterCaCertificate, endpoint, kindConfig, kubeconfig, kubeconfigPath, name, nodeImage, waitForReady);
        }
    }
}
